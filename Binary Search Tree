class Node {
    int data;
    Node left, right;
    public Node(int value) {
        data = value;
        left = right = null;
    }
}
public class BinarySearchTree {
    Node root;
    public void insert(int value) {
        root = insertRec(root, value);
    }
    private Node insertRec(Node root, int value) {
        if (root == null) {
            return new Node(value);
        }
        if (value < root.data) {
            root.left = insertRec(root.left, value);
        } else if (value > root.data) {
            root.right = insertRec(root.right, value);
        }
        return root;
    }
    public void inorder() {
        inorderRec(root);
    }
    private void inorderRec(Node root) {
        if (root != null) {
            inorderRec(root.left);
            System.out.print(root.data + " ");
            inorderRec(root.right);
        }
    }
    public static void main(String[] args) {
        BinarySearchTree bst = new BinarySearchTree();
        int[] values = {5, 1, 3, 4, 2, 7};
        for (int value : values) {
            bst.insert(value);
        }
        System.out.println("In-order traversal:");
        bst.inorder();
    }
}
